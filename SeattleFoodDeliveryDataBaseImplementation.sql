use Team2_2022
--1.Create Tables

CREATE TABLE Customer (
  CustomerID INT identity(1,1) primary key, 
  Last_Name VARCHAR(45) NOT NULL,
  First_Name VARCHAR(45) NOT NULL,
  mobile VARCHAR(200) NOT NULL,
  email VARCHAR(45) NOT NULL,
  birthdate DATETIME NOT NULL,
  Age AS DATEDIFF(hour,birthdate,GETDATE())/8766); 


CREATE TABLE Login(
  id INT identity(1,1) primary key,
  customerID INT NOT NULL
  references Customer(CustomerID),
  log_in DATETIME NOT NULL,
  log_out DATETIME NOT NULL);
  

 CREATE TABLE Address(
  AddressID INT identity(1,1) primary key, 
  Street VARCHAR(45) NOT NULL,
  ZipCode VARCHAR(45) NOT NULL,
  City VARCHAR(45) NOT NULL,
  State VARCHAR(45) NOT NULL);
 
 
 CREATE TABLE Customer_has_Address (
  Customer_CustomerID INT NOT NULL
  references Customer(CustomerID),
  Address_AddressID INT NOT NULL
  references Address(AddressID),
  PRIMARY KEY (Customer_CustomerID, Address_AddressID));
  
 
 
 CREATE TABLE Restaurant_Type(
  TypeID INT identity(1,1) primary key, 
  Type VARCHAR(45) not NULL);
 
 
 
 
 CREATE TABLE Restaurant(
  RestaurantID INT identity(1,1) primary key,
  addressID INT NOT NULL
  references Address(AddressID),
  typeID INT NOT NULL
  references Restaurant_Type(TypeID),
  open_at VARCHAR(45) NOT NULL,
  close_at VARCHAR(45) NOT NULL);
 
 
 CREATE TABLE MenuItem(
  MenuID INT identity(1,1) primary key,
  Name VARCHAR(45) NOT NULL,
  Price money NOT NULL,
  RestaurantID INT NOT NULL
  references Restaurant(RestaurantID));
 
 
 CREATE TABLE Rider(
  RiderID INT identity(1,1) primary key,
  Last_Name VARCHAR(45) NOT NULL,
  First_Name VARCHAR(45) NOT NULL);

 
 
 
CREATE TABLE payment(
  paymentID INT identity(1,1) primary key,
  paymentName VARCHAR(45) NOT NULL);
 
 
 
 CREATE TABLE OrderHeader(
  OrderID INT identity(1,1) primary key,
  customerID INT NOT NULL
  references Customer(CustomerID),
  restaurantID INT NOT NULL
  references Restaurant(RestaurantID),
  Order_date DATETIME NOT NULL,
--  Total_amount as dbo.compute_Amount(OrderID),
  paymentID INT NOT NULL
  references payment(paymentID),
  riderID INT NOT NULL
  references Rider(RiderID),
  begin_at DATETIME NOT NULL,
  arrive_at DATETIME NOT NULL);
 
  
CREATE TABLE OrderDetail(
  OrderDetailID INT identity(1,1) primary key,
  OrderID INT NOT NULL
  references OrderHeader(OrderID),
  MenuID INT NOT NULL
  references MenuItem(MenuID),
  Quantity INT NOT NULL);
 
 
 
 CREATE TABLE Rating(
  OrderID INT
  references OrderHeader(OrderID),
  RestaurantScore DECIMAL NOT NULL,
  RiderScore DECIMAL NOT NULL
  primary key (OrderID));


--2.Insert Data
insert into Customer(Last_Name,First_Name,mobile,email,birthdate)
values 
('Michael','Ray',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '206-324-0534')),'awrgad@outlook.com','1998-04-30'),
('Steven','Selikoff',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '251-492-0394')),'weekday@qq.com','1994-04-20'),
('Carole','Poland',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '204-452-6437')),'Poland@google.com','1990-03-21'),
('Bjorn','Rettig',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '202-402-9459')),'Bjorn@163.com','1989-09-23'),
('Carol','Philips',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '235-492-3248')),'Philips@outlook.com','1993-07-23'),
('Sandeep','Kaliyath',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '293-341-3451')),'Kaliyath@163.com','1997-05-30'),
('Ryan','Cornelsen',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '223-234-673')),'Cornelsen@qq.com','1997-09-30'),
('Betsy','Stadick',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '205-572-3049')),'Betsy@google.com','1997-10-10'),
('Xin','Shen',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '206-307-9992')),'awdaf@outlook.com','2000-05-30'),
('Alex','Woald',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '206-901-0341')),'dw234@qq.com','1999-08-30'),
('John','James',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '311-312-3535')),'awfeg23@163.com','1998-02-15'),
('Wen','Deng',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '209-520-5211')),'sxlovedw@google.com','2001-12-21'),
('Qing','Peng',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '211-324-5343')),'pwadfj@qq.com','2002-12-29'),
('Wei','Li',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '302-301-1102')),'awdger@outlook.com','1997-07-29'),
('Kaven','Durant',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '204-301-1988')),'prhgxfv@qq.com','1995-03-22'),
('Janice','Galvin',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '205-024-3245')),'lngheaf@google.com','1996-05-21'),
('Mary','Dempsey',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '200-224-3045')),'awfgcvf@google.com','1993-10-29'),
('Wanida','Benshoof',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '290-234-7932')),'laoade@163.com','1988-08-23'),
('Terry','Eminhizer',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '296-204-1334')),'xinlin@163.com','1978-08-20'),
('Peter','Krebs',EncryptByKey(Key_GUID(N'dataSymmetricKey'), convert(varbinary, '286-209-1230')),'powge@163.com','1999-03-01')
--Delete from Customer
--DBCC CHECKIDENT ('[Customer]', RESEED, 0);


insert into Address(Street,ZipCode,City,State)
values
('6657 Sand Pointe Lane','98104','Seattle','WA'),
('7166 Brock Lane','98104','Seattle','WA'),
('4598 Manila Avenue','98119','Seattle','WA'),
('5666 Hazelnut Lane','98101','Seattle','WA'),
('1220 Bradford Way','98121','Seattle','WA'),
('5375 Clearland Circle','98110','Seattle','WA'),
('2639 Anchor Court','98111','Seattle','WA'),
('2639 Anchor Court','98111','Seattle','WA'),
('502 Alexander Pl.','98104','Seattle','WA'),
('5125 Cotton Ct.','98100','Seattle','WA'),
('9241 13th Ave SW', '98106', 'Seattle', 'WA'),
('9514 8th Ave S', '98108', 'Seattle', 'WA'),
('9668 Rainier Ave S', '98118', 'Seattle', 'WA'),
('9679 46th Ave SW', '98136', 'Seattle', 'WA'),
('9816 51st Ave SW', '98136', 'Seattle', 'WA'),
('D Geology For The 21st', '98146', 'Seattle', 'WA'),
('8038 14th Ave NW', '98117', 'Seattle', 'WA'),
('8053 25th Ave NW', '98117', 'Seattle', 'WA'),
('3806 25th Ave W', ' 98199', 'Seattle', 'WA'),
('3419 S 164th St', ' 98188', 'Seattle', 'WA'),
('3419 S 164th St #SEATAC', ' 98188', 'Seattle', 'WA'),
('2815 31st Ave W', ' 98199', 'Seattle', 'WA'),
('3036 4th Ave W', ' 98119', 'Seattle', 'WA'),
('2152 N 179th Shoreline St', ' 98133', 'Seattle', 'WA'),
('2600 2nd Ave #803', ' 98121', 'Seattle', 'WA'),
('2619 5th Ave #606', ' 98121', 'Seattle', 'WA')



insert into [Login](customerID,log_in,log_out)
values
(9,'2022-11-29 10:10','2022-11-29 10:15'),
(7,'2022-11-27 11:24','2022-11-27 11:29'),
(5,'2022-11-27 11:30','2022-11-27 11:48'),
(7,'2022-11-27 19:30','2022-11-27 19:38'),
(1,'2022-11-22 12:29','2022-11-22 12:40'),
(4,'2022-11-24 12:09','2022-11-24 12:19'),
(2,'2022-11-25 18:09','2022-11-25 19:00'),
(5,'2022-11-09 12:03','2022-11-09 12:09'),
(3,'2022-11-11 12:10','2022-11-11 12:20'),
(6,'2022-11-16 12:23','2022-11-16 12:24'),
(9,'2022-11-23 09:56','2022-11-23 10:01'),
(10,'2022-11-19 09:51','2022-11-19 10:08'),
(11,'2022-10-10 09:09','2022-10-10 10:08'),
(11,'2022-10-29 11:22','2022-10-29 11:29'),
(15,'2022-10-26 11:09','2022-10-26 11:20'),
(19,'2022-10-18 17:06','2022-10-18 17:22'),
(20,'2022-10-17 18:30','2022-10-17 18:35'),
(20,'2022-10-10 19:30','2022-10-10 19:39'),
(12,'2022-10-21 20:01','2022-10-21 20:07'),
(12,'2022-10-29 20:08','2022-10-21 20:21')

--Delete from Login 
--DBCC CHECKIDENT ('Login', RESEED, 0);



insert into Customer_has_Address (Customer_CustomerID,Address_AddressID)
values
(1,1),
(2,3),
(3,9),
(4,2),
(5,2),
(6,7),
(7,10),
(8,8),
(9,8),
(10,2),
(11,5),
(12,2),
(12,9),
(1,8),
(13,20),
(14,22),
(15,26),
(16,19),
(17,26),
(18,21),
(19,9),
(20,1)


INSERT INTO Restaurant_Type(Type)
VALUES 
('Pizza'),
('Thai'),
('Chinese'),
('Japanese'),
('Indian'),
('Mexican'),
('Vietnamese'),
('Korean'),
('Taiwanese'),
('Greek'),
('Bakery'),
('Seafood'),
('Salads'),
('Coffee and Tea'),
('Vegetarian')

INSERT INTO Restaurant(addressID, typeID, open_at, close_at)
VALUES
(11, 1, '8:00 am', '11:00 pm'),
(12, 2, '6:00 am', '9:00 pm'),
(13, 3, '9:00 am', '5:00 pm'),
(14, 4, '7:00 am', '8:00 pm'),
(15, 5, '7:00 am', '8:00 pm'),
(16, 6, '7:00 am', '9:00 pm'),
(17, 7, '8:00 am', '10:00 pm'),
(18, 8, '8:00 am', '11:00 pm'),
(19, 9, '5:00 am', '10:00 pm'),
(20, 10, '8:00 am', '6:00 pm'),
(21, 11, '9:00 am', '5:00 pm'),
(22, 12, '5:00 am', '8:00 pm'),
(23, 13, '5:00 am', '8:00 pm'),
(24, 14, '6:00 am', '9:00 pm'),
(25, 15, '8:00 am', '10:00 pm')


INSERT INTO MenuItem(Name, Price, RestaurantID)
VALUES
('Oven-Grilled Saffron Quail', 20, 1), 
('Baked Ginger Beef', 21, 1), 
('Oven-Grilled Lime & Ginger Trout', 21, 1), 
('Roasted Olives & Mustard Oysters', 19, 1), 
('Shallow-Fried Egg & Coconut Stracciatella', 32, 1), 
('Stewed Sugar Bruschetta', 8, 1), 
('Pistachio and Strawberry Tarte Tatin', 6, 1), 
('Milk Chocolate and Coffee Fruitcake', 34, 1), 
('Dark Chocolate Delight', 38, 2), 
('Kiwi Crispies', 21, 2), 
('Oven-Baked Egg & Beans Mammoth', 26, 2), 
('Pan-Fried Apricots & Honey Yak', 33, 2), 
('Poached Soy Cockles', 6, 2), 
('Dry-Roasted Casserole of Alligator', 26, 2), 
('Brined Vegetables & Lasagna', 26, 2), 
('Gentle-Fried Pepper & Garlic Buns', 14, 2), 
('Gooseberry and Pistachio Bread', 47, 3), 
('Lemon and Nutmeg Ice Lollies', 39, 3), 
('Elderberry Pastry', 33, 3), 
('Dark Chocolate Custard', 30, 3), 
('Breaded Parsnip & Pear Venison', 13, 3), 
('Engine-Cooked Butter Boar', 25, 3), 
('Poached Parsnip & Pear Crocodile', 49, 3), 
('Oven-Baked Paprika Oysters', 24, 3), 
('Blanched Honey & Nuts Lasagna', 6, 4), 
('Cooked Cucumber & Lasagna', 29, 4), 
('Kiwi and Gooseberry Milk', 23, 4), 
('Orange and Cinnamon Jelly', 34, 4), 
('Ginger Split', 26, 4), 
('Red Wine Crumble', 10, 4), 
('Thermal-Cooked Cinnamon & Thyme Pheasant', 31, 4), 
('Dried Rice & Pork', 37, 4), 
('Braised Vanilla & Mint Lobster', 5, 5), 
('Barbecued Carrots & Ginger Crab', 7, 5), 
('Seared Garlic & Lime Vegetables', 7, 5), 
('Pickled Peas & Mushroom Forest Mushrooms', 30, 5), 
('Mango and Grapefruit Pancakes', 43, 5), 
('Melon and Date Pud', 22, 5), 
('White Wine Surprise', 28, 5), 
('Coconut Surprise', 20, 5), 
('Poached Hot & Sweet Rabbit', 36, 6), 
('Smoked Fennel & Lime Pheasant', 12, 6), 
('Breaded Orange & Olive Frog', 5, 6), 
('Simmered Salty & Sour Prawns', 7, 6), 
('Engine-Cooked Western-Style Goulash', 42, 6), 
('Gentle-Fried Fennel & Garlic Tart', 19, 6), 
('Avocado and Pineapple Jam', 49, 6), 
('Coffee and Kiwi Gingerbread', 41, 6), 
('Grapefruit Soufflé', 44, 7), 
('Cranberry Whip', 8, 7), 
('Stir-Fried Salt & Pepper Venison', 15, 7), 
('Pickled Rhubarb Lamb', 30, 7), 
('Simmered Egg & Coconut Trout', 10, 7), 
('Shallow-Fried Figs & Olive Herring', 7, 7), 
('Broasted Olives & Mustard Gratin', 44, 7), 
('Fire-Roasted Honey & Almond Moussaka', 12, 7), 
('Cashew and Avocado Fudge', 28, 8), 
('Red Wine and Mandarin Cobbler', 13, 8), 
('Guava Toffee', 42, 8), 
('Almond Pastry', 19, 8), 
('Oven-Grilled Pineapple Quail', 28, 8), 
('Fire-Grilled Nuts & Mutton', 37, 8), 
('Fire-Grilled Rhubarb Herring', 39, 8), 
('Deep-Fried Fennel & Orange Fish', 23, 8), 
('Brined Mushroom & Apricot Pasta', 28, 9), 
('Dried Peanuts & Bisque', 9, 9), 
('Elderberry and Caramel Cake', 31, 9), 
('Guava and Cinnamon Fudge', 7, 9), 
('Chestnut Jelly', 23, 9), 
('Honey Doughnut', 17, 9), 
('Fire-Grilled Jasmine Beef', 39, 9), 
('Smoked Salted Pheasant', 46, 9), 
('Broasted Jasmine Frog', 19, 10), 
('Infused Parsnip & Pear Cod', 43, 10), 
('Roasted Coconut & Ginger Calzone', 49, 10), 
('Stir-Fried Thyme & Parsley Buns', 41, 10), 
('Banana and Mandarin Candy', 5, 10), 
('Peach and Orange Sundae', 33, 10), 
('Lime Mooncake', 15, 10), 
('Plum Buns', 28, 10), 
('Cured Pasta & Yak', 22, 11), 
('Seared Vanilla Yak', 34, 11), 
('Pressure-Fried Pepper Crocodile', 32, 11), 
('Braised Cranberry Cod', 13, 11), 
('Thermal-Cooked Forest Linguine', 14, 11), 
('Braised Mustard & Rosemary Linguine', 24, 11), 
('Mandarin and Mango Ice Lollies', 49, 11), 
('Saffron and Gooseberry Milk', 9, 11), 
('Nutmeg Sorbet', 18, 12), 
('Pecan Delight', 31, 12), 
('Broasted Olives & Mustard Venison', 43, 12), 
('Stewed Honey & Thyme Pheasant', 15, 12), 
('Roasted Rice & Crab', 13, 12), 
('Tenderized Honey-Coated Crab', 6, 12), 
('Engine-Cooked Lime-Coated Vegetable Mix', 17, 12), 
('Shallow-Fried Fennel & Lemon Salad', 13, 12), 
('Melon and Mango Delight', 12, 13), 
('Cardamom and Peanut Bonbons', 27, 13), 
('Honey Pound Cake', 39, 13), 
('Pecan Crumble', 22, 13), 
('Braised Mint Turkey', 33, 13), 
('Slow-Cooked Carrot & Violet Venison', 24, 13), 
('Deep-Fried Mustard Scallops', 46, 13), 
('Seared Lime Alligator', 18, 13), 
('Thermal-Cooked Saffron Nut Mix', 46, 14), 
('Tenderized Olive Walnuts', 23, 14), 
('Cinnamon and Cranberry Strudel', 9, 14), 
('Passion Fruit and Elderberry Genoise', 48, 14), 
('Gooseberry Cake', 49, 14), 
('Pistachio Bonbons', 48, 14), 
('Tea-Smoked Pasta & Mutton', 22, 14), 
('Infused Honey & Thyme Quail', 31, 14), 
('Barbecued Cucumber & Crocodile', 48, 15), 
('Fried Apricots & Honey Alligator', 36, 15), 
('Sautéed Egg & Beans Scrambled Egg', 6, 15), 
('Cured Honey Chutney', 5, 15), 
('Cranberry and Red Wine Split', 11, 15), 
('Passion Fruit and Cranberry Waffles', 30, 15), 
('Plum Tarte Tatin', 42, 15), 
('Pistachio Crispies', 5, 15)


INSERT INTO payment(paymentName)
VALUES
('Debit Card'),
('Credit Card'),
('Paypal'),
('Apple Pay'),
('Cash'),
('Google Pay')

INSERT INTO Rider(Last_Name, First_Name)
VALUES
('Burgess', 'Jay'),
('Singleton', 'Luther'),
('Haas', 'Kaitlyn'),
('Bennett', 'Lloyd'),
('Mcgee', 'Timothy'),
('Gibson', 'Rita'),
('Gillespie', 'Priya'),
('Meyer', 'Elizabeth'),
('Byrd', 'Beatrice'),
('Wilkinson', 'Abby'),
('Day', 'Gethin'),
('Ryan', 'Kye'),
('Hughes', 'Tasneem'),
('Sullivan', 'Cecilia'),
('Mays', 'Nathaniel'),
('Raymond', 'Antonio'),
('Miller', 'Tara'),
('Bell', 'Mateo'),
('Horton', 'Anton'),
('Perez', 'Tessa'),
('Monroe', 'Gordon'),
('Bryan', 'Haris'),
('Randall', 'Virginia'),
('Whitaker', 'Sofia'),
('Boyle', 'Madeleine'),
('Mata', 'Cindy'),
('Watts', 'Cleo'),
('Friedman', 'Wilfred'),
('Foster', 'Alma'),
('Lowe', 'Wade'),
('Potts', 'Kyra'),
('Brooks', 'Daniyal'),
('Dale', 'Lennox'),
(' Brien', 'Ivy'),
('Mooney', 'Khadijah'),
('Oneill', 'Edward'),
('Holmes', 'Harriett'),
('Sutherland', 'Russell'),
('Cook', 'Tamara'),
('Ingram', 'Aurora'),
('Fleming', 'Rafferty'),
('Snyder', 'Lia'),
('Lester', 'Kain'),
('Estrada', 'Gerald'),
('Berger', 'Shakira'),
('Chavez', 'Muhammed'),
('Stone', 'Sameer'),
('Doyle', 'Aditya'),
('Mcneil', 'Miah'),
('Fitzgerald', 'Scarlet'),
('Walter', 'Lottie'),
('Carroll', 'Abbas'),
(' Neill', 'Lucian'),
('Chase', 'Eryn'),
('Sawyer', 'Riley'),
('Andrews', 'Malachi'),
('Graves', 'Mark'),
('Byrne', 'Jaime'),
('Horn', 'Violet'),
('Perry', 'Margaret'),
('Brock', 'Dawn'),
('Levine', 'Ayah'),
('May', 'Jakob'),
('Thomas', 'Nicole'),
('Knox', 'Kristen'),
('Macias', 'Freya'),
('Short', 'Bernice'),
('Rhodes', 'Kyran'),
('Stokes', 'Umair'),
('Oconnell', 'Maria'),
('Mcgrath', 'Edie'),
('Lowery', 'Arman'),
('Barron', 'Jeffrey'),
('Pierce', 'Ria'),
('Robles', 'Isla'),
('Chang', 'Josie'),
('Caldwell', 'Hugh'),
('Beard', 'Flynn'),
('Fry', 'Miguel'),
('Merrill', 'Shreya'),
('Sandoval', 'Alana'),
('Mcknight', 'Bertha'),
('Webb', 'Monica'),
('Spence', 'Axel'),
('Mayo', 'Noah'),
('Gentry', 'Nataniel'),
('Fitzpatrick', 'Drew'),
('Rios', 'Courtney'),
('Carson', 'Syed'),
('Riggs', 'Tatiana'),
('Frank', 'Leslie'),
('Park', 'Ayden'),
('Mcdaniel', 'Morgan'),
('Humphrey', 'Bessie'),
('Simmons', 'Demi-Leigh'),
('Beck', 'Kamran'),
('Ashley', 'Marissa'),
('Dennis', 'Tyrell'),
('Hampton', 'Saoirse')



INSERT INTO OrderHeader(customerID, restaurantID, Order_date, paymentID, riderID, begin_at, arrive_at)
VALUES
(8, 5, '2022-4-16 9:11', 3, 15, '2022-4-16 9:20', '2022-4-16 9:22'),
(13, 6, '2022-8-11 9:12', 1, 53, '2022-8-11 9:14', '2022-8-11 9:20'),
(3, 9, '2022-1-23 8:18', 2, 56, '2022-1-23 8:19', '2022-1-23 8:21'),
(17, 13, '2022-8-26 9:17', 3, 24, '2022-8-26 9:22', '2022-8-26 9:27'),
(3, 4, '2022-7-15 11:10', 5, 78, '2022-7-15 11:13', '2022-7-15 11:32'),
(16, 11, '2022-3-2 11:15', 4, 91, '2022-3-2 11:24', '2022-3-2 11:42'),
(19, 1, '2022-1-1 8:16', 5, 37, '2022-1-1 8:25', '2022-1-1 8:43'),
(14, 14, '2022-3-1 9:17', 1, 8, '2022-3-1 9:22', '2022-3-1 9:49'),
(17, 13, '2022-5-8 9:17', 3, 10, '2022-5-8 9:25', '2022-5-8 9:26'),
(18, 8, '2022-9-2 11:17', 4, 23, '2022-9-2 11:24', '2022-9-2 11:48'),
(9, 1, '2022-4-22 10:19', 1, 4, '2022-4-22 10:27', '2022-4-22 10:52'),
(9, 14, '2022-9-12 10:14', 1, 36, '2022-9-12 10:20', '2022-9-12 10:37'),
(11, 13, '2022-8-13 8:13', 4, 40, '2022-8-13 8:18', '2022-8-13 8:35'),
(15, 5, '2022-1-15 8:10', 1, 91, '2022-1-15 8:15', '2022-1-15 8:24'),
(1, 1, '2022-1-7 11:12', 5, 50, '2022-1-7 11:16', '2022-1-7 11:28'),
(5, 7, '2022-2-5 10:12', 4, 90, '2022-2-5 10:16', '2022-2-5 10:17'),
(1, 14, '2022-7-10 11:15', 3, 20, '2022-7-10 11:24', '2022-7-10 11:35'),
(1, 5, '2022-1-5 8:11', 1, 25, '2022-1-5 8:14', '2022-1-5 8:17'),
(7, 5, '2022-1-1 9:11', 1, 46, '2022-1-1 9:15', '2022-1-1 9:34'),
(1, 8, '2022-1-17 9:10', 2, 65, '2022-1-17 9:12', '2022-1-17 9:30'),
(1, 3, '2022-2-25 10:18', 4, 88, '2022-2-25 10:22', '2022-2-25 10:39'),
(7, 14, '2022-5-4 11:10', 3, 39, '2022-5-4 11:11', '2022-5-4 11:30'),
(4, 5, '2022-9-17 9:11', 5, 45, '2022-9-17 9:18', '2022-9-17 9:30'),
(5, 8, '2022-5-9 8:11', 1, 9, '2022-5-9 8:13', '2022-5-9 8:34'),
(18, 4, '2022-1-13 11:10', 1, 66, '2022-1-13 11:17', '2022-1-13 11:41'),
(19, 14, '2022-2-3 10:10', 2, 61, '2022-2-3 10:11', '2022-2-3 10:18'),
(17, 11, '2022-9-16 9:13', 5, 34, '2022-9-16 9:17', '2022-9-16 9:44'),
(10, 6, '2022-7-28 9:16', 4, 26, '2022-7-28 9:23', '2022-7-28 9:36'),
(12, 9, '2022-4-1 9:11', 4, 22, '2022-4-1 9:16', '2022-4-1 9:40'),
(7, 12, '2022-1-6 10:13', 1, 14, '2022-1-6 10:19', '2022-1-6 10:24'),
(18, 13, '2022-6-7 11:13', 5, 12, '2022-6-7 11:19', '2022-6-7 11:48'),
(17, 5, '2022-3-1 10:13', 3, 78, '2022-3-1 10:20', '2022-3-1 10:37'),
(17, 8, '2022-8-27 11:11', 3, 54, '2022-8-27 11:17', '2022-8-27 11:19'),
(16, 11, '2022-9-3 11:10', 5, 97, '2022-9-3 11:15', '2022-9-3 11:27'),
(12, 3, '2022-8-1 8:10', 5, 40, '2022-8-1 8:10', '2022-8-1 8:34'),
(8, 6, '2022-5-18 8:18', 4, 5, '2022-5-18 8:24', '2022-5-18 8:51'),
(2, 9, '2022-5-27 11:10', 4, 25, '2022-5-27 11:19', '2022-5-27 11:35'),
(9, 12, '2022-9-19 8:16', 4, 57, '2022-9-19 8:16', '2022-9-19 8:25'),
(1, 7, '2022-4-5 11:17', 1, 57, '2022-4-5 11:26', '2022-4-5 11:47'),
(12, 14, '2022-1-4 8:14', 1, 90, '2022-1-4 8:14', '2022-1-4 8:41'),
(15, 1, '2022-8-22 8:14', 1, 52, '2022-8-22 8:22', '2022-8-22 8:29'),
(16, 2, '2022-8-28 11:12', 1, 60, '2022-8-28 11:21', '2022-8-28 11:29'),
(4, 4, '2022-2-23 10:10', 1, 6, '2022-2-23 10:10', '2022-2-23 10:26'),
(15, 7, '2022-6-4 9:12', 2, 46, '2022-6-4 9:21', '2022-6-4 9:37'),
(13, 9, '2022-5-2 9:13', 2, 60, '2022-5-2 9:19', '2022-5-2 9:28'),
(17, 12, '2022-6-22 9:15', 1, 80, '2022-6-22 9:19', '2022-6-22 9:40'),
(17, 9, '2022-9-8 11:11', 2, 25, '2022-9-8 11:18', '2022-9-8 11:38'),
(19, 13, '2022-3-26 11:15', 4, 59, '2022-3-26 11:16', '2022-3-26 11:33'),
(18, 13, '2022-3-1 9:17', 3, 2, '2022-3-1 9:24', '2022-3-1 9:43'),
(4, 12, '2022-4-9 9:15', 1, 27, '2022-4-9 9:20', '2022-4-9 9:25'),
(11, 9, '2022-3-1 9:13', 4, 89, '2022-3-1 9:17', '2022-3-1 9:36'),
(5, 6, '2022-9-1 11:10', 1, 22, '2022-9-1 11:14', '2022-9-1 11:36'),
(17, 10, '2022-1-28 10:10', 4, 1, '2022-1-28 10:18', '2022-1-28 10:29'),
(3, 4, '2022-7-18 11:15', 1, 3, '2022-7-18 11:19', '2022-7-18 11:31'),
(11, 2, '2022-6-17 8:14', 3, 98, '2022-6-17 8:23', '2022-6-17 8:23'),
(11, 3, '2022-7-19 9:17', 1, 71, '2022-7-19 9:19', '2022-7-19 9:38'),
(11, 1, '2022-4-2 10:12', 1, 32, '2022-4-2 10:18', '2022-4-2 10:20'),
(9, 5, '2022-7-28 8:13', 4, 87, '2022-7-28 8:14', '2022-7-28 8:24'),
(11, 2, '2022-8-20 11:17', 3, 46, '2022-8-20 11:24', '2022-8-20 11:35'),
(6, 11, '2022-2-11 9:17', 5, 88, '2022-2-11 9:22', '2022-2-11 9:30'),
(18, 10, '2022-9-27 9:12', 3, 51, '2022-9-27 9:18', '2022-9-27 9:30'),
(8, 4, '2022-1-11 11:12', 2, 11, '2022-1-11 11:21', '2022-1-11 11:47'),
(5, 1, '2022-7-14 9:17', 3, 35, '2022-7-14 9:25', '2022-7-14 9:29'),
(8, 10, '2022-9-14 11:19', 5, 32, '2022-9-14 11:23', '2022-9-14 11:43'),
(1, 8, '2022-5-24 10:16', 1, 62, '2022-5-24 10:24', '2022-5-24 10:52'),
(11, 4, '2022-6-28 8:10', 1, 97, '2022-6-28 8:14', '2022-6-28 8:38'),
(19, 6, '2022-1-21 9:11', 1, 77, '2022-1-21 9:16', '2022-1-21 9:27'),
(10, 5, '2022-8-19 9:13', 5, 13, '2022-8-19 9:19', '2022-8-19 9:42'),
(14, 8, '2022-1-28 9:11', 2, 79, '2022-1-28 9:13', '2022-1-28 9:18'),
(1, 5, '2022-9-24 9:17', 1, 60, '2022-9-24 9:24', '2022-9-24 9:33'),
(9, 4, '2022-9-11 9:11', 3, 15, '2022-9-11 9:17', '2022-9-11 9:34'),
(14, 9, '2022-1-13 10:15', 1, 78, '2022-1-13 10:23', '2022-1-13 10:23'),
(6, 12, '2022-7-9 8:12', 1, 77, '2022-7-9 8:19', '2022-7-9 8:40'),
(7, 3, '2022-5-8 10:17', 4, 46, '2022-5-8 10:19', '2022-5-8 10:27'),
(14, 11, '2022-7-5 11:14', 2, 30, '2022-7-5 11:21', '2022-7-5 11:42'),
(17, 10, '2022-4-15 10:11', 3, 4, '2022-4-15 10:19', '2022-4-15 10:46'),
(4, 11, '2022-8-22 10:18', 1, 94, '2022-8-22 10:21', '2022-8-22 10:24'),
(17, 4, '2022-4-9 11:14', 3, 34, '2022-4-9 11:22', '2022-4-9 11:49'),
(17, 4, '2022-1-5 10:14', 4, 69, '2022-1-5 10:17', '2022-1-5 10:23'),
(6, 1, '2022-3-4 8:13', 3, 31, '2022-3-4 8:22', '2022-3-4 8:44'),
(18, 10, '2022-5-24 8:19', 3, 67, '2022-5-24 8:26', '2022-5-24 8:45'),
(9, 1, '2022-3-5 8:13', 1, 17, '2022-3-5 8:17', '2022-3-5 8:34'),
(9, 5, '2022-1-5 9:19', 2, 29, '2022-1-5 9:24', '2022-1-5 9:41'),
(1, 8, '2022-4-6 11:18', 4, 24, '2022-4-6 11:24', '2022-4-6 11:47'),
(1, 1, '2022-9-26 11:17', 5, 77, '2022-9-26 11:17', '2022-9-26 11:25'),
(1, 12, '2022-8-21 9:18', 2, 65, '2022-8-21 9:20', '2022-8-21 9:35'),
(1, 7, '2022-2-25 10:17', 2, 44, '2022-2-25 10:20', '2022-2-25 10:43'),
(5, 12, '2022-5-18 11:15', 2, 60, '2022-5-18 11:23', '2022-5-18 11:47'),
(12, 2, '2022-4-16 9:13', 3, 73, '2022-4-16 9:16', '2022-4-16 9:22'),
(5, 10, '2022-6-7 9:18', 3, 30, '2022-6-7 9:19', '2022-6-7 9:45'),
(13, 4, '2022-5-13 8:11', 2, 68, '2022-5-13 8:19', '2022-5-13 8:42'),
(9, 2, '2022-1-10 11:13', 5, 69, '2022-1-10 11:18', '2022-1-10 11:29'),
(10, 7, '2022-9-8 9:17', 3, 70, '2022-9-8 9:22', '2022-9-8 9:34'),
(14, 13, '2022-3-13 9:11', 5, 60, '2022-3-13 9:15', '2022-3-13 9:17'),
(10, 9, '2022-1-22 8:10', 2, 1, '2022-1-22 8:13', '2022-1-22 8:20'),
(6, 11, '2022-1-26 9:18', 3, 55, '2022-1-26 9:20', '2022-1-26 9:33'),
(15, 11, '2022-2-19 11:18', 5, 88, '2022-2-19 11:18', '2022-2-19 11:46'),
(5, 9, '2022-5-14 11:12', 5, 45, '2022-5-14 11:14', '2022-5-14 11:32'),
(13, 4, '2022-1-22 11:19', 3, 7, '2022-1-22 11:22', '2022-1-22 11:30'),
(19, 10, '2022-1-17 11:14', 1, 73, '2022-1-17 11:17', '2022-1-17 11:26'),
(6, 4, '2022-8-4 9:11', 4, 23, '2022-8-4 9:13', '2022-8-4 9:41'),
(5, 14, '2022-6-19 11:17', 3, 85, '2022-6-19 11:22', '2022-6-19 11:47'),
(4, 3, '2022-9-25 11:10', 4, 83, '2022-9-25 11:15', '2022-9-25 11:31'),
(3, 13, '2022-6-23 9:17', 1, 55, '2022-6-23 9:23', '2022-6-23 9:26'),
(2, 4, '2022-3-15 10:11', 2, 24, '2022-3-15 10:16', '2022-3-15 10:42'),
(16, 13, '2022-4-28 9:14', 2, 51, '2022-4-28 9:14', '2022-4-28 9:14'),
(3, 8, '2022-1-12 8:19', 3, 22, '2022-1-12 8:22', '2022-1-12 8:49'),
(11, 12, '2022-6-13 8:15', 1, 57, '2022-6-13 8:24', '2022-6-13 8:38'),
(11, 14, '2022-5-7 11:10', 5, 31, '2022-5-7 11:19', '2022-5-7 11:30'),
(6, 3, '2022-1-20 8:15', 4, 95, '2022-1-20 8:24', '2022-1-20 8:43'),
(1, 6, '2022-4-14 10:15', 5, 53, '2022-4-14 10:18', '2022-4-14 10:29'),
(1, 8, '2022-1-5 11:13', 1, 33, '2022-1-5 11:22', '2022-1-5 11:37'),
(18, 9, '2022-7-16 9:11', 5, 76, '2022-7-16 9:20', '2022-7-16 9:29'),
(15, 11, '2022-2-15 11:19', 2, 64, '2022-2-15 11:22', '2022-2-15 11:40'),
(3, 14, '2022-6-8 8:19', 4, 59, '2022-6-8 8:25', '2022-6-8 8:47'),
(12, 1, '2022-4-19 9:12', 4, 6, '2022-4-19 9:19', '2022-4-19 9:44'),
(18, 6, '2022-1-7 11:11', 5, 16, '2022-1-7 11:13', '2022-1-7 11:26'),
(5, 9, '2022-2-1 8:14', 2, 63, '2022-2-1 8:19', '2022-2-1 8:38'),
(5, 3, '2022-6-14 11:17', 3, 55, '2022-6-14 11:21', '2022-6-14 11:46'),
(10, 14, '2022-8-11 8:16', 1, 79, '2022-8-11 8:16', '2022-8-11 8:25'),
(18, 4, '2022-1-18 11:10', 4, 58, '2022-1-18 11:11', '2022-1-18 11:11'),
(7, 2, '2022-2-28 9:13', 1, 88, '2022-2-28 9:14', '2022-2-28 9:28'),
(5, 7, '2022-3-3 8:19', 1, 23, '2022-3-3 8:23', '2022-3-3 8:47'),
(13, 8, '2022-2-19 11:16', 5, 10, '2022-2-19 11:20', '2022-2-19 11:40'),
(13, 3, '2022-6-15 9:15', 1, 42, '2022-6-15 9:18', '2022-6-15 9:44'),
(10, 4, '2022-7-22 8:15', 1, 51, '2022-7-22 8:24', '2022-7-22 8:35'),
(10, 3, '2022-5-29 9:18', 5, 56, '2022-5-29 9:18', '2022-5-29 9:32'),
(1, 11, '2022-6-20 10:19', 5, 17, '2022-6-20 10:24', '2022-6-20 10:27'),
(9, 13, '2022-8-28 8:12', 1, 64, '2022-8-28 8:21', '2022-8-28 8:45'),
(1, 12, '2022-1-13 9:18', 4, 92, '2022-1-13 9:26', '2022-1-13 9:45'),
(2, 11, '2022-8-11 11:16', 4, 56, '2022-8-11 11:17', '2022-8-11 11:20'),
(1, 1, '2022-7-8 11:11', 5, 11, '2022-7-8 11:18', '2022-7-8 11:23'),
(3, 2, '2022-4-9 11:17', 5, 65, '2022-4-9 11:19', '2022-4-9 11:24'),
(16, 11, '2022-3-5 11:10', 3, 37, '2022-3-5 11:19', '2022-3-5 11:34'),
(2, 13, '2022-3-20 11:19', 5, 77, '2022-3-20 11:19', '2022-3-20 11:42'),
(1, 8, '2022-6-18 8:16', 1, 48, '2022-6-18 8:23', '2022-6-18 8:30'),
(6, 3, '2022-6-26 9:13', 1, 75, '2022-6-26 9:20', '2022-6-26 9:38'),
(6, 13, '2022-2-3 8:16', 3, 96, '2022-2-3 8:22', '2022-2-3 8:32'),
(6, 8, '2022-3-4 9:12', 5, 42, '2022-3-4 9:17', '2022-3-4 9:33'),
(4, 8, '2022-2-11 9:12', 1, 23, '2022-2-11 9:15', '2022-2-11 9:41'),
(12, 3, '2022-7-3 9:16', 2, 51, '2022-7-3 9:19', '2022-7-3 9:34'),
(13, 10, '2022-3-3 9:15', 2, 89, '2022-3-3 9:21', '2022-3-3 9:50'),
(9, 13, '2022-6-24 10:18', 1, 41, '2022-6-24 10:18', '2022-6-24 10:21'),
(10, 9, '2022-6-6 10:11', 3, 94, '2022-6-6 10:15', '2022-6-6 10:41'),
(10, 11, '2022-3-20 8:14', 2, 59, '2022-3-20 8:17', '2022-3-20 8:27'),
(11, 13, '2022-8-19 11:14', 1, 50, '2022-8-19 11:18', '2022-8-19 11:18'),
(6, 10, '2022-8-11 11:17', 1, 96, '2022-8-11 11:17', '2022-8-11 11:25'),
(7, 12, '2022-6-23 9:10', 1, 76, '2022-6-23 9:16', '2022-6-23 9:42'),
(7, 7, '2022-8-12 9:12', 4, 21, '2022-8-12 9:18', '2022-8-12 9:30'),
(14, 7, '2022-2-22 11:19', 3, 25, '2022-2-22 11:20', '2022-2-22 11:20'),
(1, 9, '2022-4-2 11:14', 5, 28, '2022-4-2 11:17', '2022-4-2 11:26'),
(2, 4, '2022-3-1 11:18', 1, 11, '2022-3-1 11:25', '2022-3-1 11:45'),
(13, 14, '2022-2-19 11:14', 5, 74, '2022-2-19 11:23', '2022-2-19 11:48'),
(18, 2, '2022-1-17 9:10', 4, 21, '2022-1-17 9:10', '2022-1-17 9:16'),
(19, 13, '2022-1-20 8:16', 2, 60, '2022-1-20 8:22', '2022-1-20 8:44'),
(11, 6, '2022-1-15 9:16', 2, 17, '2022-1-15 9:18', '2022-1-15 9:34'),
(18, 10, '2022-9-24 8:13', 3, 93, '2022-9-24 8:17', '2022-9-24 8:25'),
(12, 9, '2022-5-16 10:10', 3, 63, '2022-5-16 10:19', '2022-5-16 10:22'),
(13, 2, '2022-9-7 9:19', 5, 1, '2022-9-7 9:25', '2022-9-7 9:45'),
(2, 6, '2022-7-5 10:15', 3, 47, '2022-7-5 10:23', '2022-7-5 10:41'),
(8, 1, '2022-5-17 11:18', 4, 49, '2022-5-17 11:22', '2022-5-17 11:26'),
(8, 12, '2022-8-15 10:17', 1, 37, '2022-8-15 10:17', '2022-8-15 10:43'),
(5, 4, '2022-7-10 9:16', 2, 75, '2022-7-10 9:21', '2022-7-10 9:35'),
(9, 1, '2022-6-1 11:12', 3, 30, '2022-6-1 11:12', '2022-6-1 11:24'),
(17, 8, '2022-2-13 8:11', 2, 76, '2022-2-13 8:20', '2022-2-13 8:48'),
(12, 1, '2022-6-24 10:12', 5, 65, '2022-6-24 10:16', '2022-6-24 10:22'),
(14, 6, '2022-8-28 9:14', 1, 87, '2022-8-28 9:22', '2022-8-28 9:40'),
(16, 1, '2022-5-18 10:14', 1, 45, '2022-5-18 10:18', '2022-5-18 10:46'),
(19, 4, '2022-7-13 8:12', 3, 1, '2022-7-13 8:21', '2022-7-13 8:43'),
(10, 7, '2022-2-5 9:11', 2, 10, '2022-2-5 9:15', '2022-2-5 9:18'),
(4, 9, '2022-7-1 11:17', 5, 63, '2022-7-1 11:19', '2022-7-1 11:31'),
(12, 1, '2022-5-13 9:10', 1, 35, '2022-5-13 9:11', '2022-5-13 9:37'),
(8, 14, '2022-5-7 8:18', 4, 37, '2022-5-7 8:26', '2022-5-7 8:45'),
(17, 13, '2022-2-18 11:17', 5, 3, '2022-2-18 11:26', '2022-2-18 11:36'),
(9, 5, '2022-1-6 11:18', 3, 66, '2022-1-6 11:19', '2022-1-6 11:24'),
(3, 8, '2022-1-3 9:15', 1, 21, '2022-1-3 9:16', '2022-1-3 9:35'),
(19, 5, '2022-9-17 10:16', 3, 10, '2022-9-17 10:16', '2022-9-17 10:28'),
(1, 14, '2022-1-11 11:10', 3, 91, '2022-1-11 11:16', '2022-1-11 11:45'),
(5, 4, '2022-7-29 11:10', 2, 43, '2022-7-29 11:14', '2022-7-29 11:28'),
(18, 10, '2022-7-18 8:14', 1, 3, '2022-7-18 8:23', '2022-7-18 8:28'),
(9, 11, '2022-2-21 9:10', 1, 74, '2022-2-21 9:17', '2022-2-21 9:23'),
(5, 4, '2022-3-19 10:11', 1, 34, '2022-3-19 10:15', '2022-3-19 10:37'),
(18, 2, '2022-3-29 11:14', 3, 23, '2022-3-29 11:15', '2022-3-29 11:20'),
(14, 10, '2022-1-11 9:11', 1, 41, '2022-1-11 9:19', '2022-1-11 9:33'),
(1, 7, '2022-6-9 10:14', 3, 5, '2022-6-9 10:22', '2022-6-9 10:37'),
(19, 14, '2022-4-22 8:14', 3, 3, '2022-4-22 8:14', '2022-4-22 8:43'),
(12, 8, '2022-7-3 11:16', 4, 71, '2022-7-3 11:20', '2022-7-3 11:25'),
(18, 1, '2022-1-14 9:15', 5, 24, '2022-1-14 9:20', '2022-1-14 9:43'),
(11, 1, '2022-1-1 8:17', 2, 53, '2022-1-1 8:18', '2022-1-1 8:28'),
(19, 6, '2022-6-5 8:18', 3, 71, '2022-6-5 8:18', '2022-6-5 8:45'),
(18, 13, '2022-9-10 11:16', 1, 77, '2022-9-10 11:21', '2022-9-10 11:30'),
(15, 6, '2022-5-13 9:10', 1, 33, '2022-5-13 9:11', '2022-5-13 9:17'),
(15, 9, '2022-1-23 11:10', 2, 49, '2022-1-23 11:11', '2022-1-23 11:40'),
(10, 7, '2022-1-4 11:17', 2, 57, '2022-1-4 11:24', '2022-1-4 11:38'),
(11, 4, '2022-4-8 8:19', 4, 14, '2022-4-8 8:25', '2022-4-8 8:46'),
(9, 14, '2022-2-1 9:11', 1, 48, '2022-2-1 9:13', '2022-2-1 9:34'),
(19, 8, '2022-6-1 10:19', 5, 79, '2022-6-1 10:28', '2022-6-1 10:43'),
(1, 11, '2022-8-4 11:17', 4, 28, '2022-8-4 11:26', '2022-8-4 11:41'),
(1, 12, '2022-2-9 11:15', 3, 20, '2022-2-9 11:15', '2022-2-9 11:34'),
(16, 10, '2022-9-7 10:10', 4, 53, '2022-9-7 10:11', '2022-9-7 10:27')
--Delete from OrderHeader 
--DBCC CHECKIDENT ('OrderHeader', RESEED, 0);



INSERT INTO OrderDetail (OrderID,MenuID,Quantity) VALUES
        	 (1,33,1),
        	 (7,1,2),
        	 (11,2,1),
        	 (15,2,1),
        	 (41,3,1),
        	 (41,6,1),
        	 (57,7,2),
        	 (57,2,1),
        	 (57,1,1),
        	 (63,8,1),
        	 (63,4,2),
        	 (63,7,1),
        	 (80,3,2),
        	 (82,1,1),
        	 (82,6,2),
        	 (85,5,3),
        	 (116,2,2),
        	 (116,7,1),
        	 (132,2,3),
        	 (161,3,1),
        	 (161,4,2),
        	 (164,7,2),
        	 (166,8,2),
        	 (166,4,1),
        	 (168,5,4),
        	 (172,2,1),
        	 (172,1,1),
        	 (188,5,2),
        	 (188,3,1),
        	 (189,4,2),
        	 (189,8,2),
        	 (183,9,1),
        	 (183,11,1),
        	 (159,12,3),
        	 (159,14,1),
        	 (159,16,1),
        	 (154,13,2),
        	 (159,13,4),
        	 (133,9,3),
        	 (133,13,3),
        	 (122,10,1),
        	 (89,9,1),
        	 (89,15,2),
        	 (92,9,1),
        	 (92,13,2),
        	 (92,16,1),
        	 (55,11,1),
        	 (55,12,1),
        	 (59,11,1),
        	 (59,16,1),
        	 (42,12,1),
        	 (42,13,1),
        	 (42,16,1),
        	 (56,17,1),
        	 (56,24,1),
        	 (56,22,1),
        	 (21,22,2),
        	 (21,21,1),
        	 (35,22,2),
        	 (35,23,2),
        	 (103,22,2),
        	 (103,18,2),
        	 (103,19,2),
        	 (74,22,4),
        	 (119,19,1),
        	 (119,18,2),
        	 (125,24,1),
        	 (125,22,1),
        	 (125,20,1),
        	 (127,22,1),
        	 (127,20,2),
        	 (110,19,2),
        	 (110,117,3),
        	 (137,22,2),
        	 (137,21,1),
        	 (141,22,1),
        	 (141,23,2),
        	 (121,25,1),
        	 (121,26,1),
        	 (126,26,3),
        	 (126,27,2),
        	 (71,27,1),
        	 (71,28,1),
        	 (78,28,2),
        	 (78,29,3),
        	 (79,29,2),
        	 (79,30,1),
        	 (79,31,1),
        	 (105,30,2),
        	 (99,31,2),
        	 (101,32,1),
        	 (91,32,2),
        	 (91,31,1),
        	 (25,30,2),
        	 (5,30,1),
        	 (5,29,1),
        	 (62,29,2),
        	 (66,28,3),
        	 (43,28,1),
        	 (43,27,1),
        	 (54,27,2),
        	 (152,26,3),
        	 (163,25,3),
        	 (179,27,2),
        	 (179,30,2),
        	 (169,28,1),
        	 (182,28,2),
        	 (182,27,2),
        	 (195,32,1),
        	 (177,33,1),
        	 (177,40,2),
        	 (175,34,2),
        	 (175,39,1),
        	 (32,35,1),
        	 (68,36,2),
        	 (70,37,3),
        	 (58,37,2),
        	 (58,40,2),
        	 (58,39,1),
        	 (14,33,3),
        	 (14,34,2),
        	 (23,35,4),
        	 (18,34,2),
        	 (19,40,1),
        	 (19,36,2),
        	 (19,38,2),
        	 (83,35,1),
        	 (83,35,3),
        	 (83,40,2),
        	 (111,41,1),
        	 (111,48,2),
        	 (117,41,2),
        	 (177,48,1),
        	 (36,42,1),
        	 (28,42,2),
        	 (2,44,3),
        	 (67,42,2),
        	 (67,44,2),
        	 (67,45,1),
        	 (52,45,3),
        	 (52,44,2),
        	 (167,46,4),
        	 (160,45,2),
        	 (156,47,1),
        	 (156,46,2),
        	 (156,48,2),
        	 (192,45,1),
        	 (192,45,3),
        	 (190,42,2),
        	 (93,49,2),
        	 (93,50,2),
        	 (93,51,1),
        	 (93,52,1),
        	 (87,52,3),
        	 (87,53,3),
        	 (123,52,2),
        	 (16,54,2),
        	 (44,52,1),
        	 (44,54,2),
        	 (44,55,1),
        	 (39,55,3),
        	 (39,54,2),
        	 (170,56,2),
        	 (150,55,3),
        	 (149,49,4),
        	 (149,56,2),
        	 (149,58,2),
        	 (194,49,2),
        	 (194,55,3),
        	 (185,56,2),
        	 (84,57,2),
        	 (84,60,2),
        	 (124,57,1),
        	 (124,61,1),
        	 (107,58,3),
        	 (107,63,3),
        	 (112,58,2),
        	 (136,59,2),
        	 (139,60,1),
        	 (139,64,2),
        	 (139,61,1),
        	 (140,60,3),
        	 (140,64,2),
        	 (10,62,2),
        	 (20,63,3),
        	 (24,64,4),
        	 (24,57,2),
        	 (24,58,2),
        	 (33,59,2),
        	 (33,58,3),
        	 (65,58,2),
        	 (69,57,1),
        	 (69,64,2),
        	 (165,57,3),
        	 (165,59,2),
        	 (176,58,2),
        	 (176,59,3),
        	 (187,58,2),
        	 (197,59,2),
        	 (95,65,2),
        	 (95,66,2),
        	 (95,71,1),
        	 (95,72,1),
        	 (98,68,3),
        	 (98,71,3),
        	 (72,68,2),
        	 (118,69,2),
        	 (113,70,1),
        	 (113,68,2),
        	 (113,65,1),
        	 (144,70,3),
        	 (144,67,2),
        	 (3,72,2),
        	 (37,69,3),
        	 (29,67,4),
        	 (29,71,2),
        	 (29,68,2),
        	 (47,70,2),
        	 (47,68,3),
        	 (51,71,2),
        	 (45,72,1),
        	 (45,68,2),
        	 (158,67,3),
        	 (158,69,2),
        	 (151,68,2),
        	 (151,69,3),
        	 (171,68,2),
        	 (193,69,2),
        	 (200,79,2),
        	 (184,80,1),
        	 (184,78,2),
        	 (184,74,1),
        	 (180,80,3),
        	 (180,77,2),
        	 (147,73,2),
        	 (157,78,3),
        	 (142,75,4),
        	 (142,73,2),
        	 (142,78,2),
        	 (100,80,2),
        	 (100,78,3),
        	 (61,76,2),
        	 (64,74,1),
        	 (64,78,2),
        	 (53,75,3),
        	 (53,79,2),
        	 (81,78,2),
        	 (81,79,3),
        	 (76,79,2),
        	 (90,79,2),
        	 (198,81,2),
        	 (181,82,1),
        	 (181,88,2),
        	 (181,84,1),
        	 (145,83,3),
        	 (145,87,2),
        	 (131,83,2),
        	 (134,88,3),
        	 (114,85,4),
        	 (114,83,2),
        	 (114,88,2),
        	 (128,87,2),
        	 (128,88,3),
        	 (60,88,2),
        	 (27,86,1),
        	 (27,88,2),
        	 (34,86,3),
        	 (34,83,2),
        	 (6,88,2),
        	 (6,81,3),
        	 (77,82,2),
        	 (75,83,2),
        	 (96,85,2),
        	 (96,86,2),
        	 (97,81,1),
        	 (97,82,1),
        	 (199,89,3),
        	 (199,91,2),
        	 (162,93,2),
        	 (148,89,3),
        	 (50,95,4),
        	 (50,89,2),
        	 (50,96,2),
        	 (46,90,2),
        	 (46,89,3),
        	 (38,89,2),
        	 (30,94,1),
        	 (30,93,2),
        	 (38,92,3),
        	 (38,89,2),
        	 (130,93,2),
        	 (130,91,3),
        	 (108,94,2),
        	 (86,93,2),
        	 (88,95,2),
        	 (88,90,2),
        	 (73,91,1),
        	 (73,90,1),
        	 (174,97,2),
        	 (191,102,1),
        	 (191,98,2),
        	 (191,104,1),
        	 (155,99,3),
        	 (155,97,2),
        	 (48,103,2),
        	 (49,98,3),
        	 (31,99,4),
        	 (31,98,2),
        	 (31,97,2),
        	 (4,101,2),
        	 (4,100,3),
        	 (9,102,2),
        	 (13,104,1),
        	 (13,103,2),
        	 (135,102,3),
        	 (135,97,2),
        	 (146,103,2),
        	 (146,101,3),
        	 (143,104,2),
        	 (138,103,2),
        	 (129,98,2),
        	 (94,99,2),
        	 (104,97,1),
        	 (106,100,1),
        	 (102,112,2),
        	 (120,112,1),
        	 (120,105,2),
        	 (120,107,1),
        	 (109,109,3),
        	 (109,107,2),
        	 (115,108,2),
        	 (17,108,3),
        	 (12,109,4),
        	 (12,108,2),
        	 (12,107,2),
        	 (8,109,2),
        	 (8,110,3),
        	 (26,102,2),
        	 (22,106,1),
        	 (22,106,2),
        	 (40,110,3),
        	 (40,107,2),
        	 (153,109,2),
        	 (153,111,3),
        	 (178,111,2),
        	 (173,112,2),
        	 (186,109,2),
        	 (196,100,2);
        	
INSERT INTO Rating(OrderID,RestaurantScore,RiderScore)
VALUES
	 (1,6,6),
	 (2,8,7),
	 (3,8,5),
	 (4,7,4),
	 (5,9,7),
	 (6,3,4),
	 (7,2,5),
	 (8,7,6),
	 (9,8,7),
	 (10,9,6),
	 (11,8,6),
	 (12,6,8),
	 (13,9,7),
	 (14,5,7),
	 (15,8,4),
	 (16,4,5),
	 (17,9,6),
	 (18,4,7),
	 (19,6,3),
	 (20,7,9),
	 (21,3,5),
	 (22,6,6),
	 (23,7,7),
	 (24,8,5),
	 (25,4,3),
	 (26,7,5),
	 (27,8,7),
	 (28,9,8),
	 (29,4,9),
	 (30,6,5),
	 (31,3,3),
	 (32,6,7),
	 (33,4,6),
	 (34,2,5),
	 (35,7,4),
	 (36,4,5),
	 (37,7,6),
	 (38,8,7),
	 (39,6,6),
	 (40,5,7),
	 (41,4,8),
	 (42,8,4),
	 (43,9,7),
	 (44,4,6),
	 (45,6,5),
	 (46,5,6),
	 (47,7,7),
	 (48,8,8),
	 (49,5,4),
	 (50,6,7),
	 (51,7,5),
	 (52,4,7),
	 (53,5,6),
	 (54,6,3),
	 (55,7,4),
	 (56,8,5),
	 (57,4,6),
	 (58,5,8),
	 (59,3,5),
	 (60,5,4),
	 (61,7,5),
	 (62,5,4),
	 (63,7,6),
	 (64,8,7),
	 (65,9,5),
	 (66,4,3),
	 (67,5,6),
	 (68,6,4),
	 (69,3,7),
	 (70,6,4),
	 (71,4,6),
	 (72,9,8),
	 (73,8,5),
	 (74,3,6),
	 (75,6,5),
	 (76,7,7),
	 (77,4,5),
	 (78,8,7),
	 (79,3,5),
	 (80,6,8),
	 (81,4,5),
	 (82,4,7),
	 (83,7,8),
	 (84,8,5),
	 (85,4,7),
	 (86,6,4),
	 (87,5,7),
	 (88,7,8),
	 (89,8,5),
	 (90,3,9),
	 (91,8,5),
	 (92,9,3),
	 (93,6,5),
	 (94,4,7),
	 (95,6,5),
	 (96,8,8),
	 (97,7,3),
	 (98,5,4),
	 (99,5,6),
	 (100,8,7),
	 (101,5,4),
	 (102,7,5),
	 (103,5,8),
	 (104,6,3),
	 (105,9,7),
	 (106,4,6),
	 (107,5,7),
	 (108,7,5),
	 (109,9,7),
	 (110,3,6),
	 (111,5,8),
	 (112,6,4),
	 (113,5,6),
	 (114,7,7),
	 (115,8,8),
	 (116,4,7),
	 (117,5,6),
	 (118,7,8),
	 (119,3,7),
	 (120,4,6),
	 (121,7,5),
	 (122,8,7),
	 (123,6,8),
	 (124,7,6),
	 (125,5,5),
	 (126,7,7),
	 (127,5,5),
	 (128,6,7),
	 (129,9,8),
	 (130,6,5),
	 (131,8,6),
	 (132,6,7),
	 (133,7,5),
	 (134,5,7),
	 (135,7,8),
	 (136,3,7),
	 (137,4,5),
	 (138,5,4),
	 (139,7,5),
	 (140,8,6),
	 (141,9,5),
	 (142,6,7),
	 (143,8,6),
	 (144,5,8),
	 (145,6,6),
	 (146,7,4),
	 (147,8,5),
	 (148,9,6),
	 (149,3,3),
	 (150,4,6),
	 (151,5,6),
	 (152,6,7),
	 (153,7,5),
	 (154,6,6),
	 (155,5,3),
	 (156,7,5),
	 (157,6,3),
	 (158,7,6),
	 (159,9,7),
	 (160,2,8),
	 (161,6,4),
	 (162,7,6),
	 (163,5,8),
	 (164,4,2),
	 (165,7,3),
	 (166,8,4),
	 (167,7,5),
	 (168,8,8),
	 (169,7,5),
	 (170,5,5),
	 (171,4,7),
	 (172,6,6),
	 (173,3,8),
	 (174,4,5),
	 (175,8,6),
	 (176,5,7),
	 (177,4,4),
	 (178,2,6),
	 (179,5,5),
	 (180,7,7),
	 (181,8,6),
	 (182,7,5),
	 (183,6,7),
	 (184,5,5),
	 (185,7,4),
	 (186,6,7),
	 (187,4,5),
	 (188,6,7),
	 (189,8,5),
	 (190,9,8),
	 (191,8,6),
	 (192,6,7),
	 (193,5,6),
	 (194,4,8),
	 (195,4,6),
	 (196,3,7),
	 (197,5,6),
	 (198,6,8),
	 (199,3,6),
	 (200,6,6)





--3.Table-level CHECK Constraints based on a function
-- the func is to compute the average score of a rider
create function checkRiderRating(@riderID int)
returns smallint 
as 
begin 
	declare @rating int = 0;
		select @rating = avg(ra.RiderScore) 
		from OrderHeader oh
		join Rider ri
		on ri.riderID = oh.riderID 
		join Rating ra
		on ra.OrderID = oh.OrderID
		where ri.RiderID = @riderID
	return @rating
end
-- set the constraints: riders rating lower than 3 are not allowed to get new order 
alter table OrderHeader add CONSTRAINT RiderRatingCheck check
(dbo.checkRiderRating(riderID) >= 3);


--alter table OrderHeader drop constraint RiderRatingCheck
--drop function checkRiderRating


--4.Computed Columns based on a function
-- through join OrderDetail and MenuItem to automatically compute the amount when insert data into OrderHeader 
--computed column: caculate order total amount 
create function caculate_totalAmount(@OrderID int)
returns money
as 
begin 
	declare @sum money = 
  		(select sum(mi.Price * od.Quantity)
  		from OrderHeader oh
		join OrderDetail od
		on oh.OrderID = od.OrderID 
		join MenuItem mi
		on mi.MenuID = od.MenuID
	    where oh.OrderID = @OrderID);
 	set @sum = isnull(@sum, 0);
 return @sum;
end

--alter table
alter table dbo.OrderHeader 
add totalAmount as (dbo.caculate_totalAmount(OrderID));

--  insert totalAmount to OrderHeader
alter table OrderHeader
add totalAmount as (dbo.compute_Amount(OrderID))

--alter table OrderHeader drop column totalAmount
--drop function compute_Amount
 

--5.Column Data Encryption
-- to create dataSymmetricKey to encrypt the mobile of the customer 
CREATE MASTER KEY
ENCRYPTION BY PASSWORD = 'Test_P@sswOrd';

CREATE CERTIFICATE data_Certificate
WITH SUBJECT = 'Team2 data Certificate',
EXPIRY_DATE = '2022-12-31';

CREATE SYMMETRIC KEY dataSymmetricKey
WITH ALGORITHM = AES_128
ENCRYPTION BY CERTIFICATE data_Certificate;

OPEN SYMMETRIC KEY dataSymmetricKey
DECRYPTION BY CERTIFICATE data_Certificate;

--CLOSE SYMMETRIC KEY dataSymmetricKey;
--DROP SYMMETRIC KEY dataSymmetricKey;
--DROP CERTIFICATE data_Certificate;
--drop master key 


--6.Views

--View1 : top 10 rating riders
create view top10RatingRiders
as 
	with temp 
	as 
		(select ri.RiderID, ri.Last_Name, ri.First_Name, avg(ra.RiderScore) as riderRating,
			Dense_rank() over(order by avg(ra.RiderScore) desc) as ranking
		from OrderHeader oh
		join Rider ri
		on ri.riderID = oh.riderID 
		join Rating ra
		on ra.OrderID = oh.OrderID
		group by ri.RiderID, ri.Last_Name, ri.First_Name)
	select * from temp 
	where ranking <= 10

--drop view top10RatingRiders


--View2 : top 5 rating resturant 	
create view Top5RatingResturant
as 
	with temp 
	as 
		(select r.RestaurantID, rt.[Type], avg(ra.RestaurantScore) as RestaurantRating,
			Dense_rank() over(order by avg(ra.RestaurantScore) desc) as ranking
		from OrderHeader oh
		join Restaurant r 
		on r.RestaurantID = oh.restaurantID 
		join Rating ra
		on ra.OrderID = oh.OrderID
		join Restaurant_Type rt 
		on rt.TypeID = r.typeID 
		group by r.RestaurantID, rt.[Type])
	select * from temp 
	where ranking <= 5
	
	
--View3 : customer made most purchase amount
create view customerMadeMostPurcahse
as 
	select c.CustomerID, c.Last_Name, c.First_Name, sum(mi.Price * od.Quantity) as totalSum,
		rank() over(order by sum(mi.Price * od.Quantity) desc) as ranking
	from Customer c 
	join OrderHeader oh 
	on c.CustomerID = oh.customerID 
	join OrderDetail od 
	on oh.OrderID = od.OrderID 
	join MenuItem mi 
	on mi.MenuID = od.MenuID 
	group by c.CustomerID, c.Last_Name, c.First_Name;

select * from customerMadeMostPurcahse
	
--drop view customerMadeMostPurcahse


--View4 : riders rating lower than avg list
create view Riders_Rating_Lower_Than_Avg_List
as 
	with temp 
	as 
		(select ri.RiderID, ri.Last_Name, ri.First_Name, avg(ra.RiderScore) as riderRating
		from OrderHeader oh
		join Rider ri
		on ri.riderID = oh.riderID 
		join Rating ra
		on ra.OrderID = oh.OrderID
		group by ri.RiderID, ri.Last_Name, ri.First_Name)
	select t1.*
	from temp t1
	where t1.riderRating < (select sum(t2.riderRating) / count(t2.RiderID)
							from temp t2)
							

select * 
from Riders_Rating_Lower_Than_Avg_List l1
order by l1.riderRating desc

		 	 	 					
--View5 :  Menu rank for each restaurant 					
create view MenuRank
as 
select mi2.RestaurantID ,od2.MenuID ,mi2.Name ,SUM(od2.Quantity) as TotalQty,
dense_rank() over (partition by mi2.RestaurantID  order by SUM(od2.Quantity)  desc) as MenuRank
from OrderDetail od2
join MenuItem mi2
on od2.MenuID =mi2.MenuID 
group by od2.MenuID ,mi2.Name ,mi2.RestaurantID 

